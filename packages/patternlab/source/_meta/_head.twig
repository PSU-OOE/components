<!DOCTYPE html>
<html class="{{ htmlClass }}">
  <head>
    <title>{{ title }}</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width" />
    {% include '@global/webfonts/webfonts.twig' with { base_directory: '/fonts'} %}

    <!-- Begin Pattern Lab (Required for Pattern Lab to run properly) -->
    {{ patternLabHead | raw }}
    <!-- End Pattern Lab -->
    <link rel="stylesheet" href="../../css/pattern-scaffolding.css?{{ cacheBuster }}" media="all" />

    {# @TODO: Move the visually hidden styles into the base component and stop loading hidden.module.css in Drupal #}
    <style>
      .visually-hidden {
        position: absolute !important;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        width: 1px;
        height: 1px;
        word-wrap: normal;
      }

      .visually-hidden.focusable:active,
      .visually-hidden.focusable:focus {
        position: static !important;
        overflow: visible;
        clip: auto;
        width: auto;
        height: auto;
      }
    </style>

    <style>
      {{ get_component_stylesheets() }}
    </style>

    <script>

      let exposed_data = {
          "fruits": {
              "apple": {
                  "name": "Apple",
                  "taste": "tart",
                  "color": ["red", "green", "yellow"],
              },
              "banana": {
                  "name": "Banana",
                  "taste": "sweet",
                  "color": ["yellow", "green"]
              },
              "strawberry": {
                  "name": "Strawberry",
                  "taste": "sweet",
                  "color": ["red"]
              },
              "watermelon": {
                  "name": "Watermelon",
                  "taste": "sweet",
                  "color": ["green", "red"],
              },
              "grapefruit": {
                  "name": "Grapefruit",
                  "taste": "tart",
                  "color": ["pink"]
              }
          }
      };
      const cms = {
        attach: (component, callback) => callback(document),
        announce: (text, priority) => { /* @todo: implement */ },
        vendor_dir: '/vendor',
        data: name => {
            console.log(exposed_data['fruits']);
            if (typeof exposed_data !== 'undefined' && exposed_data !== 'undefined') {
                return exposed_data[name];
            }
        },
      };
    </script>
  </head>
  <body class="{{ bodyClass }}">
