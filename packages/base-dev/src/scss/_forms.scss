// @TODO: These styles need some serious TLC.
form {
  .js-form-type-processed-text {
    margin-top: rem(1);

    p {
      margin-bottom: rem(1);
    }
  }

  .js-form-type-datelist {
    margin-top: rem(2);

    label {
      display: block;
      margin-bottom: rem(0.5);
      font-family: $font-family-default;
      font-size: rem(1.4);
      font-weight: 600;

      &.form-required {
        &::after {
          content: "*";
          margin-left: rem(0.25);
          color: $primary-blue;
        }
      }
    }

    .container-inline {
      display: flex;
      justify-content: space-between;

      .js-form-type-select {
        margin-top: rem(1);
        width: calc(33.33% - #{rem(1)});

        @include bp(s) {
          width: calc(33.33% - #{rem(2)});
          margin-top: rem(0.5);
        }
      }
    }
  }

  .js-form-type-textarea {
    textarea {
      display: block;
      width: 100%;
      padding: rem(1.25);
      border: rem(.1) solid $medium-grey;
      border-radius: 0;
      font-family: $source-sans-pro;
      font-size: rem(1.6);
      line-height: 145%;
      color: $font-color-default;
      transition-property: border-color;
      transition-duration: 250ms;
      height: rem(10);
    }
  }

  .js-form-type-select {
    position: relative;

    &:before {
      font-size: rem(1.6);
      pointer-events: none;
      content: "\f107";
      font-family: $font-awesome;
      font-style: normal;
      font-weight: normal;
      text-decoration: inherit;
      position: absolute;
      color: $medium-dark-grey;
      top: 50%;
      right: rem(1.5);
      transform: translateY(-50%);
      z-index: 1;
    }
  }

  .js-form-type-textfield {
    position: relative;

    // Need to reset the font-weight because adding a span field suffix
    // around the field causes the global styles to inherit. Maybe we
    // should make the global less aggressive and not target all spans
    // inside it. Maybe just the first? For the label.
    input,
    .span {
      font-weight: 400;

    }

    .ajax-progress-throbber {
      position: absolute;
      right: rem(1.5);
      top: 67%;
      transform: translateY(-50%);

      .fas {
        &.fa-circle-notch {
          color: #666;
        }
      }
    }

    & input.error + .ajax-progress-throbber {
      top: 55%;
    }
  }

  .fieldgroup {
    margin-bottom: rem(2);
  }

  .fieldset-legend {
    font-size: rem(1.4);
    line-height: rem(1.8);
    color: $beaver-blue;
    display: inline-block;
    font-weight: 600;
    margin-bottom: rem(2);
    text-transform: uppercase;
  }

  .js-form-type-checkbox {
    font-size: rem(1.4);
    line-height: rem(1.8);
    position: relative;
    margin-bottom: rem(.25);

    input[type="checkbox"] {
      opacity: 0;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 0;

      @include bp(m) {
        z-index: -1;
      }
    }

    label {
      display: inline;
      cursor: pointer;
      transition: color .2s ease-in-out;
      vertical-align: middle;
      z-index: 1;

      &:hover {
        &::before {
          background-color: $white;
          color: $medium-grey;
          border: rem(.1) solid $medium-grey;
        }

        &::after {
          line-height: rem(2.2);
          font-family: $font-awesome;
          content: '\f00c';
          position: absolute;
          display: inline-block;
          float: left;
          text-align: center;
          left: 0;
          // adjusted for padding
          top: 0;
          height: rem(2.2);
          width: rem(2.2);
          background-color: $primary-blue;
          color: $white;
          border: rem(.1) solid $medium-grey;
          border-radius: rem(.3);
        }
      }

      &::before {
        content: "";
        display: block;
        flex: 0 0 rem(2.2);
        margin-right: rem(1.2);
        height: rem(2.2);
        width: rem(2.2);
        border: rem(.1) solid $medium-grey;
        border-radius: rem(.3);
      }

      &::after {
        line-height: rem(2.2);
        font-family: $font-awesome;
        content: '\f00c';
        position: absolute;
        display: block;
        text-align: center;
        left: 0;
        // adjusted for padding
        top: 0;
        height: rem(2.2);
        width: rem(2.2);
        background-color: $primary-blue;
        color: $white;
        border: rem(.1) solid $medium-grey;
        border-radius: rem(.3);
      }
    }

    /*Hide the checkmark by default*/
    input[type="checkbox"] + label::after {
      content: none;
    }

    /*Unhide the checkmark on the checked state*/
    input[type="checkbox"]:checked + label::after {
      font-family: $font-awesome;
      content: '\f00c';
    }

    input[type="checkbox"]:checked + label:hover::after {
      color: $white;
      background-color: $primary-blue;
    }

    input[type="checkbox"]:hover + label::before {
      border: rem(.1) solid $primary-blue;
    }

    input[type="checkbox"]:focus + label::before {
      outline: rem(.2) solid $sky-blue;
      outline-offset: rem(.2);
    }
  }

  .form-item-middlename {
    input {
      max-width: rem(6);
    }
  }

  select {
    font-size: rem(1.6);
    background: $white;
    font-family: $source-sans-pro;

    -webkit-appearance: none;
    -moz-appearance: none;
    -o-appearance: none;
    appearance: none;
    width: 100%;
    border: rem(.1) solid $medium-grey;
    border-radius: 0;
    padding: rem(1.6) rem(3.5) rem(1.6) rem(1);
  }

  button,
  input[type="button"],
  input[type="submit"],
  input[type="reset"] {
    font-size: rem(1.5);
    line-height: rem(1.5);
    display: inline-block;
    text-align: center;
    padding: rem(1.5) rem(3);
    background-color: $primary-blue;
    border-radius: rem(.2);
    color: $white;
    transition: background-color .2s ease-in-out, color .2s ease-in-out;
    position: relative;
    border: none;
    cursor: pointer;

    &:hover,
    &:focus,
    &:active {
      background-color: $nittany-navy;
      text-decoration: none;
      color: $white;
    }

    &:focus {
      outline-offset: rem(-.5);
    }

    @include bp(m) {
      padding: rem(1.7) rem(3.125);
    }

    &:hover {
      background-color: $nittany-navy;
      color: $white;
    }

    &:focus {
      background-color: $nittany-navy;
      color: $white;
    }
  }

  // form required message
  .required-text,
  .rfi-element-required-text {
    margin-top: 0 !important;
    margin-bottom: rem(3);
    font-size: rem(1.2);
    font-style: italic;

    p {
      margin: 0;
      font-size: inherit !important;
      font-style: inherit;
      line-height: 100%;
    }

    span {
      font-size: rem(1.4);
      font-weight: 700;
      color: $primary-blue;
    }
  }

  .required-text {
    span {
      line-height: rem(1.61);
    }
  }


  .ajax-progress-throbber {
    display: inline-block;
    padding: 0;
    margin: 0;
    position: relative;
    top: rem(-.2);
    .throbber {
      display: inline-block;
      padding: 0;
      background: none;
      .fas {
        position: absolute;
        right: 0;
        top: 0;
        &.fa-circle-notch {
          color: #666;
        }
        &.fa-spinner-third {
          color: $white;
          opacity: .5;
        }
      }
    }
  }
}

/***********************/
/* Form Error Message */
/*********************/

[data-drupal-messages] {
  width: 100%;
}

[aria-label="Error message"] {
  width: 100%;
  margin-bottom: rem(2);
  padding: rem(2);
  padding-left: rem(0.5);
  border: rem(.1) solid $error-red;
  background-image: url("#{$img-path}/error-icon.png");
  background-size: rem(2.4);
  background-position: rem(2) center;
  background-repeat: no-repeat;

  [role="alert"] {
    padding-left: rem(5.5);
    font-size: rem(1.4);

    ul {
      margin: 0;
      padding: 0;
      padding-left: rem(1.5);
      list-style: none;

      li {
        position: relative;
        margin: 0;
        margin-bottom: rem(0.5);
        padding: 0;

        &::before {
          content: "";
          position: absolute;
          width: rem(0.6);
          height: rem(0.6);
          top: calc(50% - #{rem(0.3)});
          right: calc(100% + #{rem(0.75)});
          border-radius: 50%;
          background-color: $font-color-default;
        }
      }
    }
  }
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
}
