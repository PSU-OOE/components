/* Automatic contrasting color definitions */
:root {
  // @TODO: Bring the expand auto-contrasting into the fold operationally.
  --cta-block-expand-background-color-default: var(--light-mauve);
  --cta-block-expand-background-color-light: var(--white);

  --cta-block-expand-background-color: var(--cta-block-expand-background-color-default);

  --box-shadow: #{_rem(.1)} #{_rem(.1)} 0 0 color-mix(in srgb, var(--nittany-navy) 50%, transparent);
  // @TODO: Remove fallback when appropriate.
  @supports not (color: color-mix(in srgb, white, white)) {
    --box-shadow: _rem(.1) _rem(.1) 0 0 rgba($nittany-navy, .5);
  }
}

.cta-block {
  border: none;
  display:inline-block;
  padding: _rem(1.5) _rem(3);
  font-family: var(--font-family--default);
  font-size: var(--font-size--msmall);
  line-height: var(--line-height--2xsnug);
  font-weight: 600;
  text-decoration:none;
  border-radius: var(--button-border-radius--default);
  transition: background-color var(--transition-duration--default) ease-in-out,
              border-color var(--transition-duration--default) ease-in-out,
              color var(--transition-duration--default) ease-in-out;
  text-align:center;
  color: var(--cta-foreground-color);
  background-color: var(--cta-background-color);
  margin-bottom: 0;
  outline-offset: _rem(-.5);
  position: relative;

  &, &:is([data-light] *) {
    --cta-foreground-color: var(--text-color--light);
    --cta-foreground-color-active: var(--text-color--light);

    --cta-background-color: var(--pa-link);
    --cta-background-color-active: var(--nittany-navy);
    --cta-outline-color: var(--sky-blue);
  }

  &:is([data-dark] *) {
    --cta-foreground-color: var(--beaver-blue);
    --cta-foreground-color-active: var(--beaver-blue);

    --cta-background-color: var(--white);
    --cta-background-color-active: var(--keystone-light);
    --cta-outline-color: var(--nittany-navy);
  }

  @include bp(m) {
    padding: _rem(1.7) _rem(3.125);
  }

  &:hover, &:focus-visible {
    text-decoration: none;
    background-color: var(--cta-background-color-active);
    color: var(--cta-foreground-color-active);
    cursor: pointer;
  }

  &:focus-visible {
    outline: _rem(.2) solid var(--cta-outline-color);
    outline-offset: _rem(-.5);
  }

  @mixin cta-colors($background, $foreground, $background-active, $foreground-active, $outline) {
    --cta-background-color: #{$background};
    --cta-background-color-active: #{$background-active};
    --cta-foreground-color: #{$foreground};
    --cta-foreground-color-active: #{$foreground-active};
    --cta-outline-color: #{$outline};
  }

  @mixin cta-color-light($name, $background, $foreground, $background-active, $foreground-active, $outline) {
    &--#{$name} {
      &, &:is([data-light] *) {
        @include cta-colors($background, $foreground, $background-active, $foreground-active, $outline);
      }
    }
  }

  @mixin cta-color-dark($name, $background, $foreground, $background-active, $foreground-active, $outline) {
    &--on-dark-#{$name} {
      &:is([data-dark] *) {
        @include cta-colors($background, $foreground, $background-active, $foreground-active, $outline);
      }
    }
  }

  @include cta-color-light('alt', var(--beaver-blue), var(--white), var(--nittany-navy), var(--white), var(--sky-blue));
  @include cta-color-light('color-keystone', var(--keystone), var(--nittany-navy), var(--invent-orange-light), var(--black), var(--nittany-navy));
  @include cta-color-light('hollow-solid', transparent, var(--beaver-blue), var(--pugh-blue), var(--nittany-navy), var(--nittany-navy));
  @include cta-color-light('hollow-dotted', transparent, var(--beaver-blue), var(--pugh-blue), var(--nittany-navy), var(--nittany-navy));
  @include cta-color-light('light-blue', var(--pa-link-light), var(--beaver-blue), var(--keystone-light), var(--beaver-blue), var(--nittany-navy));
  @include cta-color-light('expand', var(--cta-block-expand-background-color), var(--beaver-blue), var(--pugh-blue), var(--nittany-navy), var(--nittany-navy));
  @include cta-color-light('expand-reversed', var(--text-color--light), var(--beaver-blue), var(--pugh-blue), var(--nittany-navy), var(--nittany-navy));
  // @TODO: Remove reversed-on-light b/c layer in 3.0.0.
  @include cta-color-light('reversed', var(--white), var(--beaver-blue),var(--keystone-light), var(--beaver-blue), var(--nittany-navy));

  @include cta-color-dark('color-keystone', var(--keystone), var(--nittany-navy), var(--invent-orange-light), var(--black), var(--nittany-navy));
  @include cta-color-dark('reversed', var(--white), var(--beaver-blue),var(--keystone-light), var(--beaver-blue), var(--nittany-navy));
  @include cta-color-dark('light-blue', var(--pa-link-light), var(--beaver-blue), var(--keystone-light), var(--beaver-blue), var(--nittany-navy));

  &--compact {
    font-size: var(--font-size--small);
    padding: _rem(1.3) _rem(2.2);
  }

  &--xcompact,
  &--compact-responsive {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    font-size: var(--font-size--4xsmall);
    min-height: _rem(3.6);
    padding: _rem(0.5) _rem(1);
  }

  &--compact-responsive {
    @include bp(m) {
      padding: _rem(1.5) _rem(2);
      font-size: var(--font-size--small);
    }
  }

  &--campaign-legacy {
    padding: _rem(1.3) _rem(1.571);
    font-size: _rem(1.4);

    .cta-block__icon {
      margin-left: _rem(-.4);
      &::before {
        content: "\00a0\f106";
        font-size: _rem(1.2);
      }
    }
  }

  &--expand-to-fit {
    display: flex;
    align-items: center;
    justify-content: center;
    width: stretch; /* official name - not supported by major browsers yet */
    width: -webkit-fill-available;
    width: -moz-available;
  }

  &--shadow {
    box-shadow: _rem(.1) _rem(.1) rgba(0,0,0,0.25);
    filter: drop-shadow(_rem(-.1) _rem(-.1) 0 rgba(255,255,255,0.67));
  }

  &--bold {
    font-weight: 700;
  }

  &__icon {
    display: inline-flex;
    transition: color .2s ease-in-out;
    font-size: _rem(1.3);
    vertical-align: middle;
    &--before {
      margin-right: _rem(0.8);
    }
    &--after {
      margin-left: _rem(0.8);
    }

    .sprite {
      margin: auto;
    }
  }
}

.cta-block--expand {
  transition: color .3s linear, background-color .3s linear, box-shadow .3s linear;

  box-shadow: var(--box-shadow);

  &:focus-visible, &:hover {
    box-shadow: 0.1rem 0.1rem 0 0 color-mix(in srgb, var(--nittany-navy) 100%, transparent);
  }

  &:is(.bg--light-grey *, .bg--primary-blue *, .bg--beaver-blue *) {
    --cta-block-expand-background-color: var(--cta-block-expand-background-color-light);
  }
}

.cta-block--hollow-dotted,
.cta-block--hollow-solid {
  border-width: _rem(.1);

  &, &:is([data-light] *) {
    &:hover, &:focus {
      border-color: var(--pa-link);
    }
  }

  &:is([data-dark] *) {
    border-color: transparent;
  }
}

.cta-block--hollow-solid {
  border-style: solid;
}

.cta-block--hollow-dotted {
  border-style: dotted;
}

