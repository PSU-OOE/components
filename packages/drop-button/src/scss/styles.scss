@use "sass:math";

@import "../../../base/src/scss/imports/variables";
@import "../../../base/src/scss/imports/layout";

.drop-button {
  display: flex;
  position: relative;

  &__toggle {
    background: var(--light-mauve);
    border: none;
    color: var(--beaver-blue);
    cursor: pointer;
    display: inline-flex;
    gap: _rem(.5);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: var(--button-border-radius--default);
    box-shadow: _rem(.1) _rem(.1) color-mix(in srgb, var(--beaver-blue) 50%, transparent);
    transition: color var(--transition-duration--default) linear,
                background-color var(--transition-duration--default) linear
                box-shadow var(--transition-duration--default) linear;
    padding: _rem(.5);
    width: _rem(4.4);
    height: _rem(4.4);

    @include bp(xs) {
      padding: _rem(.6);
      width: _rem(5.2);
      height: _rem(5.2);
    }

    @include bp(s) {
      padding: _rem(.8);
      width: _rem(6.3);
      height: _rem(6.3);
    }

    @include bp(m) {
      padding: _rem(.9);
      width: _rem(7.2);
      height: _rem(7.2);
    }

    @include bp(l) {
      padding: _rem(1);
      width: _rem(8);
      height: _rem(8);
    }

    &:focus-visible {
      background: var(--pugh-blue);
      box-shadow: _rem(.1) _rem(.1) var(--nittany-navy);
      color: var(--nittany-navy);
      outline: none;
    }

    &:focus {
      outline: none;
    }

    &:hover {
      background: var(--pugh-blue);
      box-shadow: _rem(.1) _rem(.1) var(--nittany-navy);
      color: var(--nittany-navy);
    }

    &[aria-expanded="true"] {
      box-shadow: _rem(-.1) _rem(-.1) var(--beaver-blue);

      & + .drop-button__list {
        visibility: visible;
        opacity: 1;
      }
    }

    .sprite {
      opacity: .75;
      height: _rem(.605);
      margin-top: _rem(.3);
      max-width: 100%;
      overflow: visible;

      @include bp(xs) {
        height: _rem(.66);
      }

      @include bp(s) {
        height: _rem(.77);
      }

      @include bp(m) {
        height: _rem(.825);
      }

      @include bp(l) {
        height: _rem(.88);
      }
    }
  }

  &__label {
    font-family: var(--font-family--default);
    font-weight: var(--font-weight--regular);
    line-height: var(--line-height--nospace);
    font-size: _rem(1.2);

    @include bp(xs) {
      font-size: _rem(1.3);
    }

    @include bp(s) {
      font-size: _rem(1.5);
    }

    @include bp(m) {
      font-size: _rem(1.6);
    }

    @include bp(l) {
      font-size: _rem(1.7);
    }
  }

  &__list {
    background: var(--white);
    position: absolute;
    visibility: hidden;
    opacity: 0;
    transition: opacity var(--transition-duration--default) linear,
                visibility (--transition-duration--default) linear;
    list-style-type: none;
    border-style: solid;
    border-color: var(--slate-light) var(--slate-light) var(--slate-light) var(--sky-blue);
    border-width: _rem(.1) _rem(.1) _rem(.1) _rem(.3);
    box-shadow: _rem(.1) _rem(.3) _rem(.5) color-mix(in srgb, var(--nittany-navy) 15%, transparent);
    padding: _rem(2);
    width: _rem(28);
    z-index: 100;
    top: 100%;

    &::before {
      content: "";
      position: absolute;
      transform: rotateZ(45deg);
      background: var(--white);
      width: _rem(2);
      height: _rem(2);
      top: _rem(-1);
      z-index: -1;
      border-width: _rem(.1);
      border-style: solid;
      border-color: var(--slate-light) transparent transparent var(--slate-light);
      left: calc(#{_rem(2.2)} - #{_rem(math.div(math.sqrt(200), 10))});

      @include bp(xs) {
        left: calc(#{_rem(2.6)} - #{_rem(math.div(math.sqrt(200), 10))});
      }

      @include bp(s) {
        left: calc(#{_rem(3.15)} - #{_rem(math.div(math.sqrt(200), 10))});
      }

      @include bp(m) {
        left: calc(#{_rem(3.6)} - #{_rem(math.div(math.sqrt(200), 10))});
      }

      @include bp(l) {
        left: calc(#{_rem(4)} - #{_rem(math.div(math.sqrt(200), 10))});
      }
    }
  }

  &__link {
    color: var(--nittany-navy);
    display: block;
    padding: _rem(1);
    font-family: var(--font-family--default);
    font-size: var(--font-size--default);
    font-weight: var(--font-weight--regular);
    line-height: var(--line-height--xsnug);
    text-decoration: underline;
    text-decoration-color: transparent;
    text-underline-offset: _rem(.3);
    outline: .2rem solid transparent;
    outline-offset: 0;
    transition: text-decoration-color var(--transition-duration--default) linear,
                color var(--transition-duration--default) linear,
                outline-color var(--transition-duration--default) linear;

    &:hover {
      color: var(--pa-link);
      text-decoration-color: var(--pa-link);
    }

    &:focus-visible {
      outline-color: var(--sky-blue);
      outline-offset: 0;
      text-decoration-color: var(--pa-link);
    }
  }

  &--align-center {
    .drop-button__toggle {
      margin-left: auto;
      margin-right: auto;
    }

    .drop-button__list {
      left: 50%;
      transform: translate(-50%);
    }

    .drop-button__list::before {
      left: 50%;
      transform: rotateZ(45deg) translateX(calc(-50% + #{_rem(.2)})) translateY(calc(50% - #{_rem(.2)}));
    }
  }

  &--align-right {
    .drop-button__toggle {
      margin-left: auto;
    }

    .drop-button__list {
      right: 0;

      &::before {
        left: revert;
        right: _rem(1.2);

        @include bp(xs) {
          right: _rem(1.6);
        }

        @include bp(s) {
          right: _rem(2.15);
        }

        @include bp(m) {
          right: _rem(2.6);
        }

        @include bp(l) {
          right: _rem(3);
        }
      }
    }
  }

  &--full-width {
    .drop-button {
      &__toggle {
        flex-direction: column;
        width: 100%;
        height: auto;
        padding: _rem(.8);

        @include bp(xs) {
          padding: _rem(.9);
        }

        @include bp(s) {
          padding: _rem(1);
        }

        @include bp(m) {
          padding: _rem(1.2);
        }

        @include bp(l) {
          padding: _rem(1.5);
        }
      }

      &__list {
        width: 100%;
      }
    }
  }

  &--sticky-tab {
    .drop-button {
      &__toggle {
        flex-direction: row;
        justify-content: space-around;
        width: auto;
        height: auto;
        min-height: 100%;
        padding: _rem(1) _rem(1.5);

        .sprite {
          height: _rem(1.4);
          width: auto;
          margin-top: 0;
        }
      }

      &__label {
        font-size: _rem(1.2);
        font-weight: 600;
      }

      &__list::before {
        right: calc(#{_rem(3.2845)} - #{_rem(math.div(math.sqrt(200), 10))});
      }
    }
  }
}

// Optional peer dependency can influence certain styles.
.bg--light-grey {
  .drop-button__toggle {
    background: var(--white);

    &:hover {
      background: var(--pugh-blue);
    }

    &:focus-visible {
      background: var(--pugh-blue);
    }
  }
}
