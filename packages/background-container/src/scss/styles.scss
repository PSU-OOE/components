@use "sass:map";

@import "../../../base/src/scss/imports/variables";
@import "../../../base/src/scss/imports/layout";
@import "colors";

.bg {
  background: none;
  padding-top: rem(3);
  padding-bottom: rem(3);
  position: relative;
  overflow: hidden;

  //noinspection CssUnknownProperty
  @supports (container-type: inline-size ) {
    // Might not be needed if a linear scaling function can work now?
    container-type: inline-size;
  }

  &--padding-large {
    padding-top: rem(5);
    padding-bottom: rem(5);
  }

  @include bp(xs) {
    padding-top: rem(4);
    padding-bottom: rem(4);

    &--padding-small {
      padding-top: rem(3);
      padding-bottom: rem(3);
    }

    &--padding-large {
      padding-top: rem(5);
      padding-bottom: rem(5);
    }
  }

  @include bp(m) {
    &--padding-large {
      padding-top: rem(6);
      padding-bottom: rem(6);
    }
  }

  @each $color, $scss_color in $supported_colors {
    &--#{$color} {
      background-color: #{$scss_color};
    }
  }

  &.bg--community-shield--left .sprite {
    position: absolute;
    left: -18rem;
    top: -34rem;
    height: 42rem;
    width: auto;
    z-index: -1;

    //noinspection CssUnknownProperty
    @supports (container-type: inline-size ) {

      // Might not be needed if a linear scaling function can work now?

      //noinspection CssInvalidAtRule
      @container (min-width: 550px) {
        left: -18rem;
        top: -34rem;
        height: 52rem;
      }
    }
  }
}
